@page "/login"
@layout LoginLayout
@using System.ComponentModel.DataAnnotations
@rendermode InteractiveServer

<div class="column">
<div id="leftSide" class="half">
    <h1>WagerMate</h1>

    <p>Welcome Back!</p>

    <EditForm Model="@existingUserData" FormName="test1">
        <DataAnnotationsValidator/>
        <div class="field">
            <div><label>E-mail address:</label></div>
            <InputText class="input" type="email" @bind-Value="existingUserData.EMail"/>
            <ValidationMessage For=@(() => existingUserData.EMail) />
        </div>
        <div class="field">
            <div><label>Password:</label></div>
            <InputText class="input" type="password" @bind-Value="existingUserData.Password"/>
            <ValidationMessage For=@(() => existingUserData.Password) />
        </div>
        <div id="loginspace"><input id="login" type="submit" value="Log in" @onclick="@Save"/></div>
    </EditForm>
</div>

<div id="rightSide" class="half">
    <h1>WagerMate</h1>

    <p>Welcome Mate!</p>

    <EditForm Model="@newUserData" FormName="test2">
        <DataAnnotationsValidator/>
        <div class="field">
            <div><label>Username:</label></div>
            <InputText class="input" @bind-Value="newUserData.Username"/>
            <ValidationMessage For=@(() => newUserData.Username) />
        </div>
        <div class="field">
            <div><label>E-mail address:</label></div>
            <InputText class="input" type="email" @bind-Value="newUserData.EMail"/>
            <ValidationMessage For=@(() => newUserData.EMail) />
        </div>
        <div class="field">
            <div><label>Password:</label></div>
            <InputText class="input" type="password" @bind-Value="newUserData.Password"/>
            <ValidationMessage For=@(() => newUserData.Password) />
        </div>
        <div class="field">
            <div><label>Repeat Password:</label></div>
            <InputText class="input" type="password" @bind-Value="newUserData.PasswordRepeat"/>
            <ValidationMessage For=@(() => newUserData.PasswordRepeat) />
        </div>
        <div id="registerspace"><input id="register" type="submit" value="Register" @onclick="@Save"/></div>
    </EditForm>
</div>
</div>



@code {
    private ExistingUserData existingUserData = new ExistingUserData();
    
    public class ExistingUserData
    {
        [Required (ErrorMessage = "E-mail address is required!")]
        public string EMail { get; set; }
        [Required (ErrorMessage = "Password is required!")]
        public string Password { get; set; }
    }

    private NewUserData newUserData = new NewUserData();

    public class NewUserData
    {
        [Required (ErrorMessage = "E-mail address is required!")]
        public string EMail { get; set; }
        [Required (ErrorMessage = "Username is required!")]
        public string Username { get; set; }
        [Required (ErrorMessage = "Password is required!")]
        public string Password { get; set; }
        [Required (ErrorMessage = "Repetition of password is required!")]
        [Compare("Password", ErrorMessage = "Must match Password!")]
        public string PasswordRepeat { get; set; }
    }
    
    public void Save()
    {
        Console.WriteLine(existingUserData.EMail);
        Console.WriteLine(existingUserData.Password);
    }
}